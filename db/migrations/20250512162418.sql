-- Create enum type "session_status"
CREATE TYPE "auth"."session_status" AS ENUM ('active', 'disabled');
-- Create "sessions" table
CREATE TABLE "auth"."sessions" ("status" "auth"."session_status" NOT NULL DEFAULT 'active', "token" text NOT NULL DEFAULT gen_random_uuid(), "user_id" integer NOT NULL, "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, "last_used_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY ("token", "user_id"), CONSTRAINT "user_id" FOREIGN KEY ("user_id") REFERENCES "public"."users" ("id") ON UPDATE CASCADE ON DELETE CASCADE);
-- Create "webhooks" table
CREATE TABLE "twitch"."webhooks" ("event" text NOT NULL, "secret" text NOT NULL, "callback" text NOT NULL, "user_id" integer NOT NULL, "broadcaster_id" text NOT NULL, "bot_id" text NOT NULL, "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, "updated_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, CONSTRAINT "bot_id" FOREIGN KEY ("bot_id") REFERENCES "twitch"."users" ("id") ON UPDATE CASCADE ON DELETE RESTRICT, CONSTRAINT "broadcaster_id" FOREIGN KEY ("broadcaster_id") REFERENCES "twitch"."users" ("id") ON UPDATE CASCADE ON DELETE RESTRICT, CONSTRAINT "user_bot_account" FOREIGN KEY ("user_id", "bot_id") REFERENCES "twitch"."user_bot_accounts" ("user_id", "twitch_user_id") ON UPDATE CASCADE ON DELETE RESTRICT, CONSTRAINT "user_id" FOREIGN KEY ("user_id") REFERENCES "public"."users" ("id") ON UPDATE CASCADE ON DELETE RESTRICT);
