// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: twitch.bots.sql

package db

import (
	"context"
)

const twitchBotCreate = `-- name: TwitchBotCreate :one
INSERT INTO twitch.bots (
  user_id,
  twitch_user_id 
) VALUES (
  $1,
  $2
) RETURNING user_id
`

type TwitchBotCreateParams struct {
	UserID       int32
	TwitchUserID string
}

func (q *Queries) TwitchBotCreate(ctx context.Context, arg TwitchBotCreateParams) (int32, error) {
	row := q.db.QueryRow(ctx, twitchBotCreate, arg.UserID, arg.TwitchUserID)
	var user_id int32
	err := row.Scan(&user_id)
	return user_id, err
}

const twitchBotDelete = `-- name: TwitchBotDelete :execrows
DELETE FROM twitch.bots
WHERE user_id = $1
`

func (q *Queries) TwitchBotDelete(ctx context.Context, userID int32) (int64, error) {
	result, err := q.db.Exec(ctx, twitchBotDelete, userID)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected(), nil
}
