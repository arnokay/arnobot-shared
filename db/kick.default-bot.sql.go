// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: kick.default-bot.sql

package db

import (
	"context"
)

const kickDefaultBotGet = `-- name: KickDefaultBotGet :one
SELECT main, bot_id
FROM kick.default_bot
WHERE main = true
`

func (q *Queries) KickDefaultBotGet(ctx context.Context) (KickDefaultBot, error) {
	row := q.db.QueryRow(ctx, kickDefaultBotGet)
	var i KickDefaultBot
	err := row.Scan(&i.Main, &i.BotID)
	return i, err
}

const kickDefaultBotUpdate = `-- name: KickDefaultBotUpdate :execrows
INSERT INTO kick.default_bot (main, bot_id)
VALUES (true, $1)
ON CONFLICT (main) DO UPDATE
  SET bot_id = $1
`

func (q *Queries) KickDefaultBotUpdate(ctx context.Context, botID int32) (int64, error) {
	result, err := q.db.Exec(ctx, kickDefaultBotUpdate, botID)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected(), nil
}
